@using Friday.ERP.Shared.DataTransferObjects
@using Friday.ERP.Client.Data
@using System.Text
@inject IHttpRepository HttpRepo
@inject ISnackbar Snackbar

<CustomDialog IsLoading="@_isMainLoading">
    <MudDialog>
        <DialogContent>
            <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
                <MudGrid Spacing="2">
                    <CustomLabelAndStringField FirstText="အမည်" @bind-BindValue="@Name" Required="true"/>
                    <CustomLabelAndStringField FirstText="ဖုန်း" @bind-BindValue="@Phone" KeyboardInputType="InputType.Telephone"/>
                    <CustomLabelAndStringField FirstText="အီးမေးလ်" @bind-BindValue="@Email" KeyboardInputType="InputType.Email"/>
                </MudGrid>
                <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
                <MudGrid Spacing="2">
                    <CustomLabelAndLabel FirstText="လော့ဂ်အင်အမည်" SecondText="@Username"/>
                </MudGrid>
                <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
                <MudGrid Spacing="2">
                    <CustomLableAndCheckbox FirstText="စကားဝှက် ပြောင်းမည်" @bind-BindValue="IsChangePassword"/>
                    @if (IsChangePassword)
                    {
                        <CustomLableAndCheckbox FirstText="စကားဝှက်အ‌ဟောင်းမေ့နေသည်" @bind-BindValue="IsForceResetPassword"/>
                    }
                    @if (IsChangePassword && !IsForceResetPassword)
                    {
                        <CustomLabelAndFieldPassword FirstText="စကားဝှက်အ‌ဟောင်း" @bind-BindValue="@OldPassword" Required="@(IsChangePassword && !IsForceResetPassword)"
                                                     KeyboardInputType="@_oldPasswordInput"
                                                     AdornmentIcon="@_oldPasswordInputIcon" OnAdornmentClick="@ShowOldPassword"/>
                    }
                    @if (IsChangePassword)
                    {
                        <CustomLabelAndFieldPassword FirstText="စကားဝှက်အ‌သစ်" @bind-BindValue="@NewPassword" Required="@(IsChangePassword)"
                                                     KeyboardInputType="@_passwordInput"
                                                     AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="@ShowPassword"/>
                    }
                </MudGrid>
                <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
                <MudGrid Spacing="2">
                    <CustomLableAndAutocomplete FirstText="ရာထူး" Required="true" Value="@RoleName" SearchFuncWithCancel="@SearchUserRoles" ValueChanged="@RoleChange"
                                                OnClearButtonClick="() => { }"/>
                </MudGrid>
                <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
            </MudForm>
        </DialogContent>
        <DialogActions>
            <CustomButton
                Label="ထွက်မည်" IsLoading="_isLoading" OnClick="@DialogCancel" Color="Color.Default" Variant="Variant.Text" FullWidth="false"/>
            <CustomButton
                Label="ပြောင်းမည်" IsLoading="_isLoading" OnClick="@DialogSubmit" Variant="Variant.Text" FullWidth="false"/>
        </DialogActions>
    </MudDialog>
</CustomDialog>

@code {

    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    [Parameter] public Guid UserGuid { get; set; }
    [Parameter] public string? Name { get; set; }
    [Parameter] public string? Phone { get; set; }
    [Parameter] public string? Email { get; set; }
    [Parameter] public string? Username { get; set; }
    [Parameter] public string? RoleName { get; set; }

    MudForm? _form;
    bool _success;
    string[] _errors = [];

    bool _isMainLoading;
    bool _isLoading;

    List<UserRoleViewDto> _roles = [];

    string? OldPassword { get; set; }
    string? NewPassword { get; set; }

    bool IsChangePassword { get; set; }
    bool IsForceResetPassword { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _isMainLoading = true;
        StateHasChanged();
        var result = await HttpRepo.GetAllUserRoles(null);
        if (result.isSuccess)
        {
            _roles = result.userRoleViewDtos!;
        }

        _isMainLoading = false;
        StateHasChanged();
    }

    void RoleChange(string? value)
    {
        RoleName = value;
    }

    async Task<IEnumerable<string>> SearchUserRoles(string? value, CancellationToken token)
    {
        var result = await HttpRepo.GetAllUserRoles(value);
        if (!result.isSuccess)
            return [];

        _roles = result.userRoleViewDtos!;
        return _roles.Select(c => c.Name);
    }

    void DialogCancel()
    {
        MudDialog!.Cancel();
    }

    async Task DialogSubmit()
    {
        _isLoading = true;
        StateHasChanged();

        await _form!.Validate();
        if (_form.IsValid)
        {
            var roleGuid = _roles.Where(x => x.Name == RoleName).Select(c => c.Guid).SingleOrDefault();

            var dataToUpdate = new UserUpdateDto(
                Name,
                Phone,
                Email,
                IsForceResetPassword,
                OldPassword is not null ? Encoding.UTF8.GetBytes(OldPassword!) : null,
                NewPassword is not null ? Encoding.UTF8.GetBytes(NewPassword!) : null,
                roleGuid
            );
            var httpResult = await HttpRepo.UpdateUserByGuid(UserGuid,
                dataToUpdate
            );

            if (httpResult.isSuccess)
            {
                Snackbar.Add("အသုံးပြုသူ၏ကိုယ်ရေးအချက်အလက်ကို ပြောင်းပြီးပါပြီ", Severity.Success);
            }

            MudDialog!.Close(DialogResult.Ok(httpResult.isSuccess));
        }

        _isLoading = false;
        StateHasChanged();
    }

    bool _isPasswordShow;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowPassword()
    {
        @if (_isPasswordShow)
        {
            _isPasswordShow = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _isPasswordShow = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }

    bool _isOldPasswordShow;
    InputType _oldPasswordInput = InputType.Password;
    string _oldPasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowOldPassword()
    {
        @if (_isOldPasswordShow)
        {
            _isOldPasswordShow = false;
            _oldPasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            _oldPasswordInput = InputType.Password;
        }
        else
        {
            _isOldPasswordShow = true;
            _oldPasswordInputIcon = Icons.Material.Filled.Visibility;
            _oldPasswordInput = InputType.Text;
        }
    }

}