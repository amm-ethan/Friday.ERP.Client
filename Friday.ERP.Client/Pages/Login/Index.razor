@page "/login"
@using Friday.ERP.Client.Data
@using System.Text
@using Friday.ERP.Shared.DataTransferObjects
@using Friday.ERP.Client.Shared.Layouts

@inject IHttpRepository HttpRepo
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

@layout LoginLayout

<MudPaper Elevation="10" Class="pa-8 mx-auto" Width="100%" MaxWidth="500px">
    <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
        <MudText Class="mb-6" Typo="Typo.h5">Friday</MudText>
        <MudGrid>
            <CustomRowWithLabelAndFieldString FirstMd="4" FirstLg="4"
                                              SecondMd="8" SecondLg="8"
                                              FirstText="Username" @bind-BindValue="@Username" Required="true"/>
            <CustomRowWithLabelAndFieldPassword FirstMd="4" FirstLg="4"
                                                SecondMd="8" SecondLg="8"
                                                FirstText="Password" @bind-BindValue="@Password" Required="true" KeyboardInputType="@_passwordInput"
                                                AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="@ShowPassword"/>
        </MudGrid>
        <MudGrid Class="mt-2">
            <MudItem xs="12" sm="12" md="12">
                <CustomButton Label="ဝင်ရန်" IsLoading="_isLoading" OnClick="@Login" Variant="Variant.Filled"/>
            </MudItem>
        </MudGrid>
    </MudForm>
</MudPaper >

@code {
    MudForm? _form;
    bool _success;
    string[] _errors = [];

    bool _isLoading;

    string? Username { get; set; }
    string? Password { get; set; }

    async Task Login()
    {
        await _form!.Validate();
        if (_form.IsValid)
        {
            var encryptedPassword = Encoding.UTF8.GetBytes(Password!);

            _isLoading = true;
            StateHasChanged();

            var result = await HttpRepo.Login(new LoginDto(Username!, encryptedPassword));
            if (result.isSuccess)
            {
                Snackbar.Add("Login Successful", Severity.Success);
                NavigationManager.NavigateTo("");
            }

            _isLoading = false;
            StateHasChanged();
        }
    }

    bool _isPasswordShow;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowPassword()
    {
        @if (_isPasswordShow)
        {
            _isPasswordShow = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _isPasswordShow = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }

}