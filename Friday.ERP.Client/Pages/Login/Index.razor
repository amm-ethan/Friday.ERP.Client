@page "/login"

@using Friday.ERP.Client.Data
@using System.Text
@using Friday.ERP.Shared.DataTransferObjects

@inject IHttpRepository HttpRepo
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

@layout LoginLayout

<MudPaper Elevation="25" Class="pa-8 mx-auto" Width="100%" MaxWidth="500px">
    <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
        <MudText Class="py-4" Typo="Typo.h5">Friday</MudText>
        <MudGrid>
            <MudItem xs="12" sm="12" md="12">
                <MudTextField Label="username" @bind-Value="Username" Variant="Variant.Outlined" Required="true"></MudTextField>
            </MudItem>
        </MudGrid>
        <MudGrid>
            <MudItem xs="12" sm="12" md="12">
                <MudTextField Label="password" @bind-Value="Password" Required="true"
                              Variant="Variant.Outlined" InputType="@_passwordInput"
                              Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon"
                              OnAdornmentClick="ShowPassword" AdornmentAriaLabel="Show Password"/>
            </MudItem>
        </MudGrid>
        <MudGrid Class="mt-2">
            <MudItem xs="12" sm="12" md="12">
                <CustomButton Disabled="_isLoading" Color="Color.Primary" OnClick="@Login">
                    @if (_isLoading)
                    {
                        <MudProgressCircular Color="Color.Default" Style="height:27px;width:27px;" Indeterminate="true"/>
                    }
                    else
                    {
                        @("ဝင်ရန်")
                    }
                </CustomButton>
            </MudItem>
        </MudGrid>
    </MudForm>
</MudPaper >

@code {
    MudForm? _form;
    bool _success;
    string[] _errors = [];

    bool _isLoading;

    string? Username { get; set; }
    string? Password { get; set; }

    async Task Login()
    {
        await _form!.Validate();
        if (_form.IsValid)
        {
            var encryptedPassword = Encoding.UTF8.GetBytes(Password!);

            _isLoading = true;
            StateHasChanged();

            var result = await HttpRepo.Login(new LoginDto(Username!, encryptedPassword));
            if (result.isSuccess)
            {
                Snackbar.Add("Login Successful", Severity.Success);
                NavigationManager.NavigateTo("");
            }

            _isLoading = false;
            StateHasChanged();
        }
    }

    bool _isPasswordShow;
    InputType _passwordInput = InputType.Password;
    string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowPassword()
    {
        @if (_isPasswordShow)
        {
            _isPasswordShow = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _isPasswordShow = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }

}