@page "/"
@using Friday.ERP.Shared.DataTransferObjects
@using Friday.ERP.Client.Data
@using Friday.ERP.Client.Pages.Dashboard.Components.Molecules
@using Friday.ERP.Client.Pages.Dashboard.Components.Templates
@using Friday.ERP.Client.Shared.Layouts
@inject IHttpRepository HttpRepo

@layout MainLayout
@attribute [Authorize]

<CustomContainer>
    <MudItem sm="12" style="padding: 6px;"/>
    <MudItem sm="12" md="8">
        @if (_isMainLoading)
        {
            <CustomCard StyleParameter="height: 40vh;">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="100%"/>
            </CustomCard>
        }
        else
        {
            <CustomInfoCard HeaderText="အရောင်းအဝယ်စာရင်းများ">
                <SubHeader>
                    <MudText Class="align-self-center" Align="Align.End" Typo="Typo.h6" Color="Color.Info">
                        <b>၆လအတွင်း</b>
                    </MudText>
                </SubHeader>
                <ChildContent>
                    @if (_hasSummaryData)
                    {
                        <MudChart ChartType="ChartType.Bar" ChartSeries="@_series"
                                  @bind-SelectedIndex="_index" XAxisLabels="@_xAxisLabels" Width="100%"/>
                    }
                    else
                    {
                        <div class="d-flex d-column justify-center flex-grow-1" style="height: 50vh;">
                            <div class="align-self-center">
                                <MudText Typo="Typo.caption">ဒေတာမရှိသေးပါ</MudText>
                            </div>
                        </div>
                    }
                </ChildContent>
            </CustomInfoCard>
        }

    </MudItem>
    <MudItem sm="12" md="4">
        @if (_isMainLoading)
        {
            <CustomCard StyleParameter="height: 40vh;">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="100%"/>
            </CustomCard>
        }
        else
        {
            <CustomInfoCard HeaderText="အကြွေးစားရင်း">
                <SubHeader>
                    <MudText Class="align-self-center" Align="Align.End" Typo="Typo.h6" Color="Color.Error">
                        <b>@($"{_totalDebitOfCustomer * -1} ကျပ်")</b>
                    </MudText>
                </SubHeader>
                <ChildContent>
                    @if (_customersWithDebits.Count != 0)
                    {
                        <div class="d-flex justify-space-between mt-4">
                            <MudText Typo="Typo.caption">
                                စျေးဝယ်သူများ
                            </MudText>
                            <MudText Typo="Typo.caption">
                                အ‌ကြွေး (ကျပ်)
                            </MudText>
                        </div>
                        @foreach (var customer in _customersWithDebits)
                        {
                            <CustomRowWithAvaterAndLabel AvatarColor="Color.Dark" AvatarText="@customer.CustomerName[0].ToString()"
                                                         MainText="@customer.CustomerName" SubText="@($"{customer.TotalCreditDebitLeft * -1}")"/>
                        }
                    }
                    else
                    {
                        <div class="d-flex d-column justify-center flex-grow-1" style="height: 50vh;">
                            <div class="align-self-center">
                                <MudText Typo="Typo.caption">ဒေတာမရှိသေးပါ</MudText>
                            </div>
                        </div>
                    }
                </ChildContent>
            </CustomInfoCard>
        }
    </MudItem>
    <MudItem sm="12" md="6">
        @if (_isMainLoading)
        {
            <CustomCard StyleParameter="height: 40vh;">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="100%"/>
            </CustomCard>
        }
        else
        {
            <CustomInfoCard HeaderText="အရောင်းရဆုံးပစ္စည်းများ">
                <SubHeader>
                    <MudText Class="align-self-center" Align="Align.End" Typo="Typo.h6" Color="Color.Info">
                        <b>၁လအတွင်း</b>
                    </MudText>
                </SubHeader>
                <ChildContent>
                    @if (_topSellingProducts.Count != 0)
                    {
                        <div class="d-flex justify-space-between mt-4">
                            <MudText Typo="Typo.caption">
                                ပစ္စည်း
                            </MudText>
                            <MudText Typo="Typo.caption">
                                ကြိမ်
                            </MudText>
                        </div>
                        @foreach (var product in _topSellingProducts)
                        {
                            <CustomRowWithAvaterAndLabel AvatarColor="Color.Primary" AvatarText="@product.ProductName[0].ToString()"
                                                         MainText="@product.ProductName" SubText="@product.PurchaseCount.ToString()"
                                                         ExtraColor="@product.CategoryColor" ExtraText="@product.CategoryName"/>
                        }
                    }
                    else
                    {
                        <div class="d-flex d-column justify-center flex-grow-1" style="height: 10vh;">
                            <div class="align-self-center">
                                <MudText Typo="Typo.caption">ဒေတာမရှိသေးပါ</MudText>
                            </div>
                        </div>
                    }

                </ChildContent>
            </CustomInfoCard>
        }
    </MudItem>
    <MudItem sm="12" md="6">
        @if (_isMainLoading)
        {
            <CustomCard StyleParameter="height: 40vh;">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="100%"/>
            </CustomCard>
        }
        else
        {
            <CustomInfoCard HeaderText="မကြာခဏစျေးဝယ်သူများ">
                <SubHeader>
                    <MudText Class="align-self-center" Align="Align.End" Typo="Typo.h6" Color="Color.Info">
                        <b>၁လအတွင်း</b>
                    </MudText>
                </SubHeader>
                <ChildContent>
                    @if (_frequentCustomer.Count != 0)
                    {
                        <div class="d-flex justify-space-between mt-4">
                            <MudText Typo="Typo.caption">
                                စျေးဝယ်သူ
                            </MudText>
                            <MudText Typo="Typo.caption">
                                ကျပ်
                            </MudText>
                        </div>
                        @foreach (var customer in _frequentCustomer)
                        {
                            <CustomRowWithAvaterAndLabel AvatarColor="Color.Dark" AvatarText="@customer.CustomerName![0].ToString()"
                                                         MainText="@customer.CustomerName" SubText="@customer.Total.ToString()"/>
                        }
                    }
                    else
                    {
                        <div class="d-flex d-column justify-center flex-grow-1" style="height: 10vh;">
                            <div class="align-self-center">
                                <MudText Typo="Typo.caption">ဒေတာမရှိသေးပါ</MudText>
                            </div>
                        </div>
                    }
                </ChildContent>
            </CustomInfoCard>
        }
    </MudItem>
    <MudItem sm="12" style="padding: 6px;"/>
</CustomContainer>


@code {
    int _index = -1;

    readonly List<ChartSeries> _series = [];
    string[] _xAxisLabels = [];
    bool _hasSummaryData;

    bool _isMainLoading;

    long _totalDebitOfCustomer;
    List<CustomerWithDebitViewDto> _customersWithDebits = [];
    List<InvoiceSaleForFrequentCustomerViewDto> _frequentCustomer = [];
    List<TopSellingProductsViewDto> _topSellingProducts = [];

    protected override async Task OnInitializedAsync()
    {
        _isMainLoading = true;
        StateHasChanged();

        await GetMonthlySummary();
        await GetCustomersWithDebit();
        await GetFrequentCustomers();
        await GetTopSellingProducts();

        _isMainLoading = false;
        StateHasChanged();
    }

    async Task GetMonthlySummary()
    {
        var result = await HttpRepo.GetMonthlySummary();
        if (result is { isSuccess: true, monthlySaleFigureViewDtos: not null })
        {
            var xAxisLabels = new List<string>();
            var purchaseSeries = new ChartSeries { Name = "အဝယ်", Data = [] };
            var purchaseData = new List<double>();
            var saleSeries = new ChartSeries { Name = "အရောင်း", Data = [] };
            var saleData = new List<double>();
            var profitSeries = new ChartSeries { Name = "အမြတ်", Data = [] };
            var profitData = new List<double>();
            foreach (var monthDetail in result.monthlySaleFigureViewDtos!)
            {
                xAxisLabels.Add(monthDetail.Month!);
                purchaseData.Add(monthDetail.TotalPurchaseAmount);
                saleData.Add(monthDetail.TotalSaleAmount);
                profitData.Add(monthDetail.TotalProfitAmount);

                if (monthDetail.TotalPurchaseAmount != 0 ||
                    monthDetail.TotalSaleAmount != 0 ||
                    monthDetail.TotalProfitAmount != 0)
                    _hasSummaryData = true;
            }

            _xAxisLabels = xAxisLabels.ToArray();
            purchaseSeries.Data = purchaseData.ToArray();
            saleSeries.Data = saleData.ToArray();
            profitSeries.Data = profitData.ToArray();

            _series.Add(purchaseSeries);
            _series.Add(saleSeries);
            _series.Add(profitSeries);
        }
    }

    async Task GetCustomersWithDebit()
    {
        var result = await HttpRepo.GetCustomersWithDebit();
        if (result.isSuccess)
        {
            _totalDebitOfCustomer = result.customerDebitSummaryViewDto!.TotalDebits;
            _customersWithDebits = result.customerDebitSummaryViewDto.CustomersWithDebits;
        }
    }

    async Task GetFrequentCustomers()
    {
        var result = await HttpRepo.GetFrequentCustomers();
        if (result.isSuccess)
        {
            _frequentCustomer = result.invoiceSaleForFrequentCustomerViewDtos!;
        }
    }

    async Task GetTopSellingProducts()
    {
        var result = await HttpRepo.GetTopSellingProducts();
        if (result.isSuccess)
        {
            _topSellingProducts = result.topSellingProductsViewDtos!;
        }
    }

}