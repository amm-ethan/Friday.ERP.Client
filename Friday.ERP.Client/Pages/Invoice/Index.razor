@page "/invoice/{id:guid?}"
@using Friday.ERP.Shared.DataTransferObjects
@using Friday.ERP.Client.Data
@using Friday.ERP.Client.Pages.Invoice.Dialogs
@using Friday.ERP.Client.Pages.Purchase.Components.Templates
@using Friday.ERP.Client.Pages.UserManagement.Components
@using Friday.ERP.Client.Shared.Layouts

@inject IHttpRepository HttpRepo
@inject IDialogService DialogService
@inject IJSRuntime Js
@inject NavigationManager NavManager

@layout MainLayout
@attribute [Authorize]

<CustomContainer>
    <CustomPage Sm="12" Md="5" IsLoading="@_isMainLoading">
        <MudTabs Elevation="0" Rounded="true" Centered="true">
            <CustomTab TitleText="အရောင်းစာရင်းများ" OnTabClick="@(() => ChangeTab(false))"
                       IsLoading="@_isLoading"
                       Height="60vh">
                <CustomHeader>
                    <MudItem sm="4">
                        <MudDatePicker Label="နေ့စွဲ" Date="@_selectedDate" Margin="Margin.Dense"
                                       DateChanged="@ChangeDateValue"
                                       Clearable="true"
                                       MinDate="@(DateTime.Today.AddMonths(-6))"
                                       MaxDate="@(DateTime.Today)"
                                       Variant="Variant.Outlined"/>
                    </MudItem>
                    <MudItem sm="4">
                        <MudAutocomplete T="string?"
                                         Label="စျေးဝယ်သူ"
                                         Clearable="true"
                                         ResetValueOnEmptyText="true"
                                         Dense="true"
                                         FullWidth="true"
                                         Variant="Variant.Outlined"
                                         Margin="Margin.Dense"
                                         SearchFuncWithCancel="@CustomerVendorSearch"
                                         ValueChanged="@CustomerVendorChange"
                                         OnClearButtonClick="@CustomerVendorClear"/>
                    </MudItem>
                    <MudItem sm="4">
                        <CustomTextFieldWithIcon BindValue="@_searchTerm" ValueChanged="ChangeInvoiceSearchValue" ClassParameter="mr-2"/>
                    </MudItem>
                </CustomHeader>
                <CustomBody>
                    @if (_invoiceSaleTableList.Count == 0)
                    {
                        <div class="d-flex d-column justify-center flex-grow-1" style="height: 50vh;">
                            <div class="align-self-center">
                                <MudText Typo="Typo.caption">စာရင်းမရှိသေးပါ</MudText>
                            </div>
                        </div>
                    }
                    else
                    {
                        @foreach (var invoice in _invoiceSaleTableList)
                        {
                            <MudItem sm="12" md="12">
                                <CustomCardRectangle OnClick="@(() => ShowSaleInvoiceDetails(invoice))"
                                                     FirstMainText="@invoice.InvoiceNo"
                                                     FirstSubText="@($"{invoice.GrandTotal.ToString()} ကျပ်")"
                                                     SecondMainText="@(invoice.CustomerName ?? "Walk-In")"
                                                     SecondSubText="@invoice.PurchasedAt.ToString("d")"
                                                     IsSelected="@(_selectedInvoiceGuid == invoice.Guid)"/>
                            </MudItem>
                        }
                    }
                </CustomBody>
            </CustomTab>
            <CustomTab TitleText="အဝယ်စာရင်းများ" OnTabClick="@(() => ChangeTab(true))"
                       IsLoading="@_isLoading"
                       Height="60vh">
                <CustomHeader>
                    <MudItem sm="4">
                        <MudDatePicker Label="နေ့စွဲ" Date="@_selectedDate" Margin="Margin.Dense"
                                       DateChanged="@ChangeDateValue"
                                       Clearable="true"
                                       MinDate="@(DateTime.Today.AddMonths(-6))"
                                       MaxDate="@(DateTime.Today)"
                                       Variant="Variant.Outlined"/>
                    </MudItem>
                    <MudItem sm="4">
                        <MudAutocomplete T="string?"
                                         Label="စျေးဝယ်သူ"
                                         Clearable="true"
                                         ResetValueOnEmptyText="true"
                                         Dense="true"
                                         FullWidth="true"
                                         Variant="Variant.Outlined"
                                         Margin="Margin.Dense"
                                         SearchFuncWithCancel="@CustomerVendorSearch"
                                         ValueChanged="@CustomerVendorChange"
                                         OnClearButtonClick="@CustomerVendorClear"/>
                    </MudItem>
                    <MudItem sm="4">
                        <CustomTextFieldWithIcon BindValue="@_searchTerm" ValueChanged="ChangeInvoiceSearchValue" ClassParameter="mr-2"/>
                    </MudItem>
                </CustomHeader>
                <CustomBody>
                    @if (_invoicePurchaseTableList.Count == 0)
                    {
                        <div class="d-flex d-column justify-center flex-grow-1" style="height: 50vh;">
                            <div class="align-self-center">
                                <MudText Typo="Typo.caption">စာရင်းမရှိသေးပါ</MudText>
                            </div>
                        </div>
                    }
                    else
                    {
                        @foreach (var invoice in _invoicePurchaseTableList)
                        {
                            <MudItem sm="12" md="12">
                                <CustomCardRectangle OnClick="@(() => ShowPurchaseInvoiceDetails(invoice))"
                                                     FirstMainText="@invoice.InvoiceNo"
                                                     FirstSubText="@($"{invoice.GrandTotal.ToString()} ကျပ်")"
                                                     SecondMainText="@invoice.VendorName"
                                                     SecondSubText="@invoice.PurchasedAt.ToString("d")"
                                                     IsSelected="@(_selectedInvoiceGuid == invoice.Guid)"/>
                            </MudItem>
                        }
                    }
                </CustomBody>
            </CustomTab>
        </MudTabs>
    </CustomPage>
    <CustomPage Sm="12" Md="7" IsLoading="@_isMainLoading">
        @if (_selectedInvoiceGuid is null)
        {
            <div class="d-flex d-column justify-center flex-grow-1" style="height: 50vh;">
                <div class="align-self-center">
                    <MudText Typo="Typo.caption">စာရင်းအကြောင်းအရာများ</MudText>
                </div>
            </div>
        }
        else
        {
            <MudGrid Spacing="2">
                <CustomLabelAndLabel FirstText="စာရင်းနံပါတ်"
                                     SecondText="@(_isPurchaseInvoice ? _selectedInvoicePurchase!.InvoiceNo : _selectedInvoiceSale!.InvoiceNo)"
                                     SecondTextAlign="Align.End"/>
                <CustomLabelAndLabel FirstText="နေ့စွဲ"
                                     SecondText="@(_isPurchaseInvoice ? _selectedInvoicePurchase!.PurchasedAt.ToString("d") : _selectedInvoiceSale!.PurchasedAt.ToString("d"))"
                                     SecondTextAlign="Align.End"/>
                <CustomLabelAndLabel FirstText="@(_isPurchaseInvoice ? "ရောင်းသူ" : "ဝယ်သူ")"
                                     SecondText="@(_isPurchaseInvoice ? _selectedInvoicePurchase!.Vendor.Name : _selectedInvoiceSale!.Customer is null ? "Walk-in" : _selectedInvoiceSale!.Customer.Name)"
                                     SecondTextAlign="Align.End"/>
            </MudGrid>
            <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
            <MudGrid Spacing="2" Justify="Justify.FlexStart" Style="overflow-y: auto;height: 100%;align-content: baseline;">
                @if (_isPurchaseInvoice)
                {
                    @foreach (var product in _selectedInvoicePurchase!.PurchasedProducts)
                    {
                        <MudItem sm="12" md="12">
                            <CustomCardRectangle OnClick="() => { }"
                                                 FirstMainText="@product.ProductName"
                                                 FirstSubText="@product.Quantity.ToString()"
                                                 ImageSrc="@(product.Image is not null ? $"data:image/png;base64, {product.Image!}" : "product_png/placeholder.png")"
                                                 SecondMainText="@($"{product.BuyPrice.ToString()} ကျပ်")"
                                                 SecondSubText="@($"{product.Total.ToString()} ကျပ်")"/>
                        </MudItem>
                    }
                }
                else
                {
                    @foreach (var product in _selectedInvoiceSale!.SoldProducts)
                    {
                        <MudItem sm="12" md="12">
                            <CustomCardRectangle OnClick="() => { }"
                                                 FirstMainText="@product.ProductName"
                                                 FirstSubText="@product.Quantity.ToString()"
                                                 ImageSrc="@(product.Image is not null ? $"data:image/png;base64, {product.Image!}" : "product_png/placeholder.png")"
                                                 SecondMainText="@($"{product.ProducePriceSalePrice.ToString()} ကျပ်")"
                                                 SecondSubText="@($"{product.Total.ToString()} ကျပ်")"/>
                        </MudItem>
                    }
                }

            </MudGrid>
            <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
            <MudGrid Spacing="2">
                <CustomLabelAndLabel FirstText="စုစုပေါင်းကျငွေ"
                                     SecondText="@(_isPurchaseInvoice ? $"{_selectedInvoicePurchase!.GrandTotal.ToString()} ကျပ်" : $"{_selectedInvoiceSale!.Total.ToString()} ကျပ်")"
                                     SecondTextAlign="Align.End"/>
            </MudGrid>
            <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
            <MudGrid Spacing="2">
                @if (_isPurchaseInvoice)
                {
                    <MudItem sm="12">
                        <CustomButton Variant="Variant.Filled"
                                      Label="စာရင်းအပြည့်အစုံကြည့်ရန်" IsLoading="_isLoading" OnClick="@(() => ShowInvoiceInfo(true))" Color="Color.Info"/>
                    </MudItem>
                }
                else
                {
                    if (_selectedInvoiceSale!.DeliveryInfo is not null)
                    {
                        <MudItem sm="12" md="12">
                            <CustomButton Variant="Variant.Filled"
                                          Label="Delivery ကြည့်ရန်" IsLoading="_isLoading" OnClick="@ShowDeliveryInfo" Color="Color.Secondary"/>
                        </MudItem>
                    }

                    <MudItem sm="4" md="@(_selectedInvoiceSale!.Customer is not null ? 4 : 6)">
                        <CustomButton Variant="Variant.Filled"
                                      Label="စာရင်းအပြည့်အစုံကြည့်ရန်" IsLoading="_isLoading" OnClick="@(() => ShowInvoiceInfo(false))" Color="Color.Info"/>
                    </MudItem>
                    <MudItem sm="4" md="@(_selectedInvoiceSale!.Customer is not null ? 4 : 6)">
                        <CustomButton Variant="Variant.Filled"
                                      Label="Download" IsLoading="_isLoading" OnClick="@DownloadInvoice"/>
                    </MudItem>
                    if (_selectedInvoiceSale!.Customer is not null)
                    {
                        <MudItem sm="4" md="4">
                            <CustomButton Variant="Variant.Filled" Color="Color.Dark"
                                          Label="ပြင်ရန်" IsLoading="_isLoading" OnClick="@Edit"/>
                        </MudItem>
                    }
                }

            </MudGrid>
        }
    </CustomPage>
</CustomContainer>

<script>
  window.downloadFileFromStream = async (fileName, contentStreamReference) => {
    const arrayBuffer = await contentStreamReference.arrayBuffer();
    const blob = new Blob([arrayBuffer]);
    const url = URL.createObjectURL(blob);
    const anchorElement = document.createElement('a');
    anchorElement.href = url;
    anchorElement.download = fileName ?? '';
    anchorElement.click();
    anchorElement.remove();
    URL.revokeObjectURL(url);
  }
</script>

@code {
    [Parameter] public Guid? Id { get; set; }
    
    bool _isMainLoading;
    bool _isLoading;

    Guid? _selectedInvoiceGuid;
    bool _isPurchaseInvoice;
    InvoicePurchaseViewDto? _selectedInvoicePurchase;
    InvoiceSaleViewDto? _selectedInvoiceSale;

    List<CustomerVendorViewDto> _customerVendorViewList = [];
    List<InvoicePurchaseTableViewDto> _invoicePurchaseTableList = [];
    List<InvoiceSaleTableViewDto> _invoiceSaleTableList = [];

    string? _selectedCustomerVendorName;
    string? _searchTerm;
    DateTime? _selectedDate;

    readonly int _pageSize = 50;

    async Task<IEnumerable<string>> CustomerVendorSearch(string? value, CancellationToken token)
    {
        return await GetCustomerVendorData(value);
    }

    async Task CustomerVendorChange(string? value)
    {
        _selectedCustomerVendorName = value;
        await GetData();
    }

    async Task CustomerVendorClear()
    {
        _selectedCustomerVendorName = null;
        await GetData();
    }

    async Task ChangeDateValue(DateTime? value)
    {
        _selectedDate = value;
        await GetData();
    }

    async Task ChangeInvoiceSearchValue(string value)
    {
        _searchTerm = value;
        await GetData();
    }

    protected override async Task OnInitializedAsync()
    {
        _isMainLoading = true;
        StateHasChanged();
    
        await GetInvoiceSalesData();
        await GetCustomerVendorData(null);

        if (Id is not null)
        {
            _isPurchaseInvoice = false;
            var result = await HttpRepo.GetSaleInvoice(Id ?? Guid.Empty);
            if (result.isSuccess)
            {
                _selectedInvoiceSale = result.invoiceSaleViewDto!;
                _selectedInvoiceGuid = Id;
            }
        }

        _isMainLoading = false;
        StateHasChanged();
    }

    async Task<IEnumerable<string>> GetCustomerVendorData(string? search)
    {
        if (_isPurchaseInvoice)
        {
            var result = await HttpRepo.SearchVendors(search);
            if (!result.isSuccess)
                return [];
            _customerVendorViewList = result.CustomerVendorViewDtos!;
        }
        else
        {
            var result = await HttpRepo.SearchCustomers(search);
            if (!result.isSuccess)
                return [];
            _customerVendorViewList = result.CustomerVendorViewDtos!;
        }

        return _customerVendorViewList.Select(c => c.Name);
    }

    async Task GetInvoiceSalesData()
    {
        _isLoading = true;
        StateHasChanged();

        var selectedCustomerVendor = _customerVendorViewList.SingleOrDefault(c => c.Name == _selectedCustomerVendorName);
        var parameters = new InvoiceParameter
        {
            PageSize = _pageSize,
            PageNumber = 1,
            SearchTerm = _searchTerm,
            CustomerVendorGuid = selectedCustomerVendor?.Guid,
            FromPurchasedDate = _selectedDate,
            ToPurchasedDate = _selectedDate
        };

        var result = await HttpRepo.GetAllSalesInvoices(parameters);
        if (result.isSuccess)
        {
            _invoiceSaleTableList = result.invoiceSaleViewDtos!.Items!;
        }

        _isLoading = false;
        StateHasChanged();
    }

    async Task GetInvoicePurchasesData()
    {
        _isLoading = true;
        StateHasChanged();

        var selectedCustomerVendor = _customerVendorViewList.SingleOrDefault(c => c.Name == _selectedCustomerVendorName);
        var parameters = new InvoiceParameter
        {
            PageSize = _pageSize,
            PageNumber = 1,
            SearchTerm = _searchTerm,
            CustomerVendorGuid = selectedCustomerVendor?.Guid,
            FromPurchasedDate = _selectedDate,
            ToPurchasedDate = _selectedDate
        };

        var result = await HttpRepo.GetAllPurchasesInvoices(parameters);
        if (result.isSuccess)
        {
            _invoicePurchaseTableList = result.invoicePurchaseViewDtos!.Items!;
        }

        _isLoading = false;
        StateHasChanged();
    }

    async Task ChangeTab(bool isPurchasedInvoice = false)
    {
        _isPurchaseInvoice = isPurchasedInvoice;

        _selectedCustomerVendorName = null;
        _searchTerm = null;
        _selectedDate = null;
        _selectedDate = null;

        _selectedInvoiceGuid = null;
        _selectedInvoicePurchase = null;
        _selectedInvoiceSale = null;

        await GetData();

        StateHasChanged();
    }

    async Task ShowSaleInvoiceDetails(InvoiceSaleTableViewDto invoice)
    {
        _isLoading = true;
        StateHasChanged();

        var result = await HttpRepo.GetSaleInvoice(invoice.Guid);
        if (result.isSuccess)
        {
            _selectedInvoiceSale = result.invoiceSaleViewDto!;
            _selectedInvoiceGuid = invoice.Guid;
        }

        _isLoading = false;
        StateHasChanged();
    }

    async Task ShowPurchaseInvoiceDetails(InvoicePurchaseTableViewDto invoice)
    {
        _isLoading = true;
        StateHasChanged();

        var result = await HttpRepo.GetPurchaseInvoice(invoice.Guid);
        if (result.isSuccess)
        {
            _selectedInvoicePurchase = result.invoicePurchaseViewDto!;
            _selectedInvoiceGuid = invoice.Guid;
        }

        _isLoading = false;
        StateHasChanged();
    }

    async Task GetData()
    {
        if (_isPurchaseInvoice)
        {
            await GetInvoicePurchasesData();
        }
        else
        {
            await GetInvoiceSalesData();
        }
    }

    async Task ShowDeliveryInfo()
    {
        var parameters = new DialogParameters<TransactionDeliveryDialog>
        {
            { x => x.Address, _selectedInvoiceSale!.DeliveryInfo!.Address },
            { x => x.ContactPerson, _selectedInvoiceSale!.DeliveryInfo!.ContactPerson },
            { x => x.ContactPhone, _selectedInvoiceSale!.DeliveryInfo!.ContactPhone },
            { x => x.DeliveryServiceName, _selectedInvoiceSale!.DeliveryInfo!.DeliveryServiceName },
            { x => x.DeliveryContactPerson, _selectedInvoiceSale!.DeliveryInfo!.DeliveryContactPerson },
            { x => x.DeliveryContactPhone, _selectedInvoiceSale!.DeliveryInfo!.DeliveryContactPhone },
            { x => x.Remark, _selectedInvoiceSale!.DeliveryInfo!.Remark }
        };
        var options = new DialogOptions();
        await DialogService.ShowAsync<TransactionDeliveryDialog>("Delivery ကြည့်ရန်", parameters, options);
    }

    async Task ShowInvoiceInfo(bool isPurchaseInvoice)
    {
        var parameters = new DialogParameters<TransactionInfoDialog>();
        if (isPurchaseInvoice)
        {
            parameters.Add("SubTotal", _selectedInvoicePurchase!.SubTotal);
            parameters.Add("Discount", _selectedInvoicePurchase!.Discount);
            parameters.Add("DeliveryFees", _selectedInvoicePurchase!.DeliveryFees);
            parameters.Add("Total", _selectedInvoicePurchase!.Total);
            parameters.Add("GrandTotal", _selectedInvoicePurchase!.GrandTotal);
            parameters.Add("PaidTotal", _selectedInvoicePurchase!.PaidTotal);
            parameters.Add("ExistingCreditDebit", _selectedInvoicePurchase!.ExistingCreditDebit);
            parameters.Add("CreditDebitLeft", _selectedInvoicePurchase!.CreditDebitLeft);
            parameters.Add("Remark", _selectedInvoicePurchase!.Remark);
            parameters.Add("IsPaid", _selectedInvoicePurchase!.IsPaid ? "Yes" : "No");
        }
        else
        {
            parameters.Add("SubTotal", _selectedInvoiceSale!.SubTotal);
            parameters.Add("Discount", _selectedInvoiceSale!.Discount);
            parameters.Add("DeliveryFees", _selectedInvoiceSale!.DeliveryFees);
            parameters.Add("Total", _selectedInvoiceSale!.Total);
            parameters.Add("GrandTotal", _selectedInvoiceSale!.GrandTotal);
            parameters.Add("PaidTotal", _selectedInvoiceSale!.PaidTotal);
            parameters.Add("ExistingCreditDebit", _selectedInvoiceSale!.ExistingCreditDebit);
            parameters.Add("CreditDebitLeft", _selectedInvoiceSale!.CreditDebitLeft);
            parameters.Add("Remark", _selectedInvoiceSale!.Remark);
            parameters.Add("IsPaid", null);
        }

        var options = new DialogOptions();
        await DialogService.ShowAsync<TransactionInfoDialog>("စာရင်းအပြည့်အစုံကြည့်ရန်", parameters, options);
    }

    void Edit()
    {
        NavManager.NavigateTo($"/sale/update/{_selectedInvoiceSale!.Guid.ToString()}");
    }

    async Task DownloadInvoice()
    {
        var httpResult = await HttpRepo.DownloadSaleInvoice(_selectedInvoiceSale!.Guid);

        _isLoading = false;
        StateHasChanged();

        if (httpResult.isSuccess)
        {
            var fileName = $"{_selectedInvoiceSale!.InvoiceNo}.pdf";

            using var streamRef = new DotNetStreamReference(httpResult.stream!);
            await Js.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
        }
    }
}