<MudDialog>
    <DialogContent>
        <MudGrid Spacing="2">
            <CustomLabelAndLabel FirstText="SubTotal" SecondText="@($"{SubTotal.ToString()} mmk")"/>
            <CustomLabelAndLabel FirstText="Discount" SecondText="@($"- {Discount.ToString()} mmk")" SecondTextColor="Color.Error"/>
            <CustomLabelAndLabel FirstText="Delivery Fees" SecondText="@($"{DeliveryFees.ToString()} mmk")"/>
        </MudGrid>
        <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
        <MudGrid Spacing="2">
            <CustomLabelAndLabel FirstText="Total" SecondText="@($"{Total.ToString()} mmk")"/>
            <CustomLabelAndLabel FirstText="Grand Total" SecondText="@($"{GrandTotal.ToString()} mmk")"/>
        </MudGrid>
        <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
        <MudGrid Spacing="2">
            <CustomLabelAndLabel FirstText="Paid Total" SecondText="@($"{PaidTotal.ToString()} mmk")"/>
            <CustomLabelAndLabel FirstText="Credit / Debit Left"
                                 SecondTextColor="@(CreditDebitLeft < 0 ? Color.Error : Color.Info)"
                                 SecondText="@($"{CreditDebitLeft.ToString()} mmk")"/>
        </MudGrid>
        <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
        <MudGrid Spacing="2">
            <CustomLabelAndLabel FirstText="Remark" SecondText="@Remark"/>
        </MudGrid>
        <MudDivider DividerType="DividerType.FullWidth" Class="my-4"/>
        @if (IsPaid is not null)
        {
            <MudGrid Spacing="2">
                <CustomLabelAndLabel FirstText="IsPaid"
                                     SecondText="@(IsPaid)"/>
            </MudGrid>
            <MudDivider DividerType="DividerType.FullWidth" Class="mt-4"/>
        }
    </DialogContent>
    <DialogActions>
        <CustomButton Label="Back" OnClick="@Back" Color="Color.Default" Variant="Variant.Text" FullWidth="false"/>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    [Parameter] public long SubTotal { get; set; }
    [Parameter] public long? Discount { get; set; }
    [Parameter] public long DeliveryFees { get; set; }
    [Parameter] public long Total { get; set; }
    [Parameter] public long GrandTotal { get; set; }
    [Parameter] public long PaidTotal { get; set; }
    [Parameter] public long CreditDebitLeft { get; set; }
    [Parameter] public string? Remark { get; set; }
    [Parameter] public string? IsPaid { get; set; }


    void Back()
    {
        MudDialog!.Cancel();
    }

}