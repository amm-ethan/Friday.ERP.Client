@using Friday.ERP.Shared.DataTransferObjects
<MudProgressLinear Color="Color.Primary" Class="mb-4" Indeterminate="@IsLoading"/>
<MudGrid Spacing="2">
    <MudItem sm="12" md="@(CreateButton is null ? 6 : 4)" Class="align-self-center">
        <MudText Typo="Typo.h6">ပစ္စည်းများ</MudText>
    </MudItem>
    <MudItem sm="12" md="3" Class="align-self-center">
        @* Todo *@
        <MudAutocomplete T="string?"
                         Label="ပစ္စည်းအမျိုးအစား"
                         Clearable="true"
                         ResetValueOnEmptyText="true"
                         Dense="true"
                         FullWidth="true"
                         Variant="Variant.Outlined"
                         Margin="Margin.Dense"
                         SearchFuncWithCancel="@CategorySearch"
                         ValueChanged="@CategoryChange"
                         OnClearButtonClick="@CategoryClear">
        </MudAutocomplete>
    </MudItem>
    <MudItem sm="12" md="3" Class="align-self-center">
        <CustomTextFieldWithIcon BindValue="@SearchTerm" ValueChanged="ProductSearchValueChange" ClassParameter="mr-2"/>
    </MudItem>
    @if (CreateButton is not null)
    {
        <MudItem sm="12" md="2" Class="align-self-center">
            @CreateButton
        </MudItem>
    }
</MudGrid>
<MudGrid Spacing="2" Class="mt-4" Justify="Justify.FlexStart" Style="overflow-y: auto">
    @if (ProductList.Count == 0)
    {
        <MudItem sm="12">
            <div class="d-flex d-column justify-center flex-grow-1" style="height: 50vh;">
                <div class="align-self-center">
                    <MudText Typo="Typo.caption">ပစ္စည်းများ မရှိသေးပါ</MudText>
                </div>
            </div>
        </MudItem>
    }
    else
    {
        @ChildContent
    }
</MudGrid>

@code {

    [Parameter] public bool IsLoading { get; set; }

    [Parameter] public Func<string, CancellationToken, Task<IEnumerable<string>>>? CategorySearch { get; set; }

    [Parameter] public EventCallback<string?> CategoryChange { get; set; }

    [Parameter] public EventCallback<MouseEventArgs> CategoryClear { get; set; }

    [Parameter] public string? SearchTerm { get; set; }

    [Parameter] public EventCallback<string> ProductSearchValueChange { get; set; }

    [Parameter] public List<ProductViewDto> ProductList { get; set; } = new();

    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public RenderFragment? CreateButton { get; set; }

}